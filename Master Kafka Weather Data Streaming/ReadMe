
# Kafka Weather Data Streaming

## Introduction
This project focused on working with Apache Kafka to build a data pipeline that streams weather data for New York City, fetched from the OpenWeatherMap API at regular intervals.

## Installation and Kafka Setup
Kafka was installed on a Mac using Homebrew:

1. **Install Homebrew**: Package manager for Mac.
2. **Install Kafka**: Along with ZooKeeper via Homebrew.
3. **Configure PATH**: Add Kafka installation to the system's PATH.

```bash
brew install kafka
zookeeper-server-start /opt/homebrew/etc/kafka/zookeeper.properties
kafka-server-start /opt/homebrew/etc/kafka/server.properties

## Real-world Application Scenario
The Kafka weather data streaming setup could be applied in a **Smart City Initiative** to manage and optimize urban services based on weather conditions. For instance, the streamed weather data could be used to:

- Adjust **public transportation schedules**.
- Optimize **energy grid loads**.
- Inform residents and tourists about weather conditions through a **mobile app**.

## Conclusion
This project demonstrated Kafka's capability to facilitate **real-time data streaming**, and the potential of **PySpark** to process that data efficiently. The producer and consumer scripts create a robust system capable of handling real-time weather data, showcasing Kafka's utility in real-world applications.

The document highlights both the **technical details** and the broader **context** of how this data streaming setup could be employed to solve real-world problems.
